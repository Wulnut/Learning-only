// 函数
// java语言在调用函数时，永远只能传值给函数

/**
 * 传值
 * 函数的每次运行，就产生了一个地理的变量空间，在这个空间中的变量，是函数的这次运行所独有的，称作本地变量。
 * 定义在函数内部的变量就是本地变量，参数也是本地变量
 * 我们认为函数接收的时是参数，主函数中调用传入的是值
 */
public class Ex12 {
    // a, b是参数
    public static void swap(int a, int b) {
        int t = a + b;
        a = t - a;
        b = t - b;
    }

    /**
     * 当函数期望的参数类型比调用函数时给的值的类型的时候， 编译器能悄悄替你把类型转换号
     * 允许由高精度向低精度转化(精度的窄缩)，但是静止由低精度向高精度转化不然会出现精度损失
     * char -> int -> double (精度由低到高)
     */
    public static void main(String[] args) {
        swap(1, 2); // 1, 2, 是值；
    }
}